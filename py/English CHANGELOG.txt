                                       __          _ __    __         
                 ____  _____ ____     / /_  __  __(_) /___/ /__  _____
                / __ \/ ___/ ___/    / __ \/ / / / / / __  / _ \/ ___/
               / / / (__  ) /__     / /_/ / /_/ / / / /_/ /  __/ /    
              /_/ /_/____/\___/____/_.___/\__,_/_/_/\__,_/\___/_/     
                             /_____/                                  
-------------------------------------------------------------------------------------
                        NINTENDO SWITCH CLEANER AND BUILDER
                     (THE XCI MULTI CONTENT BUILDER AND MORE)
-------------------------------------------------------------------------------------
=============================     BY JULESONTHEROAD     =============================
-------------------------------------------------------------------------------------
"                                POWERED BY SQUIRREL                                "
"                    BASED IN THE WORK OF BLAWAR AND LUCA FRAGA                     "
-------------------------------------------------------------------------------------                   
Program's github: https://github.com/julesontheroad/NSC_BUILDER
Blawar's github:  https://github.com/blawar
Blawar's tinfoil: https://github.com/digableinc/tinfoil
Luca Fraga's github: https://github.com/LucaFraga
-------------------------------------------------------------------------------------
---------------
0. Changelog
---------------
v0.87c- Bugfixes
	- Adds check for correct original titlekey for xci conversions from nsx files without
	  a titlekey. 
	- Fixes bug when RSV check progress bar multiplies when checking dlc unlockers
	- Fixes message "needs RSV check" for non meta files in community-made nca files
          (They still won't verify in level2 since they won't have a proper signature1)
	- Adds name sanitizing after romaji conversion
	- Improves blankspace removal after romaji conversion
	- Adds all roman numbers to the bad character list, they will be replaced by it's 
	  multicharacter equivalent.
	  Example: Assasin's Creed 3 uses the â…¢ character which corresponds to 1 character. 
	  This is replaced for III which corresponds for 3 characters
	- Fixes message "master_key_08 is present but program doesn't have the hash to verify the key"
v0.87- Sanitation of names, romaji convertion and improvements in verification
	- Automated removal of bad characters on names in direct-multi function
	- Added option to convert japanese and asian names to romaji in direct-multi name
	  This is set by default due to the Horizon system having issues with these characters
	- New ption in global options to remove the romaji conversion
	- New renaming options for renamer function:
	  * Name sanitazion -> Removes bad characters on filenames.
	  * Romanize -> Converts kanji\extended kanna\chinese to romaji (japanese romanization)
	- Force romaji in prints in info functions for compatibility with windows CMD console
	- Fix issue with info functions,database,renamer,... reading filenames when only 
	  chinese language is present in the control nca file.
	- Added RSV verification to the verifier.
      * If a meta file was modified by NSCB the program will be	able to detect the original
	    RSV
	  * By restoring the RSV it will be able to restore the header and match it against the
	    Nintendo Private Signature (Signature1) fully authenticating the file.
	  * Oppens the road to a soon to be implemented FILE RESTORATION MODE
	- Improved verification prints
	  * Better detection for isgamecard changes
	  * Now the program will print the original keygeneration of the file and the new 
	    keygeneration
	  * Added check that will show if a ticket is missing when titlerights are present on a
        nca file. (For example a preload without the ticket)
	- Better verification speeds:
	  * Some assumptions are taken to speed up verification with keygeneration and RSV changer
	    These assumptions are made taken into account the way NSCB works and probabilities.
	  * If squirrel is used by external programs verification times may change.
	- Added NACP reader for control nca files without NSP\XCI extraction:	  
	  * The implementation is based on 0Liam's NCAP reader and 90% his work
	- Added fast prints for every info function instead of nut info by catching the screen prints
	  * Nut info is planned to be refactored
v0.86e- Fixes NSCB.bat that got messed up when merging beta and master branches
v0.86d- Adds support for keygeneration 9\masterkey8
	- Added support for keygeneration 9\masterkey8 in info functions, keys verification,
	  nsp\xci verifier and keygeneration change function
	- Fixes issue when squirrel tries to find ticket when user verifies a standard crypto
      nsp
	- Added korean language via NSCB_KR by DDinghoya. This file is linked to the profile
	  NSCB_KR_options.cmd
	Note: I'm open to translations though for interested translators please wait a little 
	and i'll implement tools to facilitate changes between versions.
v0.86c- Fixes issue when new updates were detected as smaller versions than new updates
	- For some reason it's value needed to be forced as integer again for detection to
	  work properly on some cases.
v0.86b- Quick fix for weird false possitive in ticket check
v0.86- File Verification:
	- Adds file verification system accesible in info and individual modes
	  * Verification has 3 modes\levels:
	    Level 1: Decryption test
		  > Tests that all nca files are readable
		  > Tests non listed files are missing
		  > Tests all needed nca files are in the file
		  > Tests titlekey is correct for titlerights nca files
		  > Compatible with files with multiple tickets
	    Level 2: Signature test
		  > Test files against Nintendo's fixed signature
		  > Virtually restores header for titlerights removed files
		  > Virtually restores header for isgamecard changed files	  
		  > Virtually restores header for keygeneration changed files			  
		  > Match restore or unrestored headers against Nintendo signature
		  > Can accurately declare that a file was signed by Nintendo if modified
    		by NSCB which of course will serve to test safety of converts
		  > If titlekey was removed it prints original titlekey		  
		  > Won't work when the files wasn't signed by Nintendo or other
			convertion methods
		  > For meta nca files with modified RSV, header restoration is pending
		    implementation, that will come in next iteration
	    Level 3: Hash test
		  > Test files against their listed hash
		  > Will used the restored header to build a hash for modified files if
		    needed
		  > Can accurately declare that a file is not corrupted
	  * For file info the program will ask if you want to do a hash test afer 
	    passing level1 and level2 verification
          > This helps when reading files from the cloud with filestream methods
            since level1 and level2 is pretty much instant while a hash check is
			equivalent to a full download.
		  > Filestream supported methods:
		    * Raidrive
			* Google filestream
			* Rclone mount
	  * For file info the prints where catched so the text output is instant in 
        the verification mode. Will be added to other info modes in the future	  
	  * Verification in individual mode allows for mass verification.
          > NSCB will ask the level of verification before starting the process
		  > If a bad file is detected it will be write to badfiles.txt in root
		  > The verification output for each file is added to INFO\VERIFY
	  * Also compatible with filestream methods		  
	- Add Advance mode to add extra functions regularly
	  * For now only file extraction for nsp\xci was added
	  * Extraction result is added to the "extract" folder	  
	- Add SDK numbers in info modes with proper format
	- Add SDK numbers to extended database
	- Several other bugfixes
v0.85b- Fixes several issues:
	- Redo implementation of direct multi handler for asian names
	- Solves issue with rebuilder were wrong argument was being used
	- Solves issue with dlc keys retribal in database for titlerights crypto dlcs		
v0.85- Middlestone update.
	*Introduced ability to create multiple multixci or multinsp in both auto and 
	  manual mode based on the base-titleid of games\updates\dlc
	*Introduced ability to setup jobs for multimode so they can be build in one 
	 go later. This is useful specially if you want to add several games to xci\nsp
	*Introduced ability to ignore setup jobs in favour of the current one.
	*Setup folders for multibuild jobs. Main folder is "lists":
	 - Subfolder for setup jobs: lists\m_multi
	 - Subfolder for current jobs: lists\a_multi
	 Note: The lists are created during the normal operation of the program.
	*Implemented ability to handle the exceptions for the few asian games that had
	their title not decoded properly.
	*Fixed issue for the multicontent splitter where updates\dlcs weren't splitted
	 as nsp when the output was set to xci
	*Added ability to output xci data on the databases
	*Added simplified database option
	*Added super-xci-trimmer to the individual modes. It'll take off paddings, 
	 update partition and game updates. It's meant to have minimun scene-xcis
	 that can be verified with tinfoil which already ignored updates when 
	 installing these xci since they are normally outdated.
	 NOTE: The card-ncas are not modified so the signature verifies on tinfoil
	*Added file rebuilder on the individual modes. This rebuilds by cnmt order nsps,
         doesn't ignore files without deltas, adds cnmt.xml files and erases deltas if 
	 selected in the config as the other modes
	*Delta removal mode now rebuilds by cnmt order and create cnmt.xml files
	*Delta removal mode now respects original names.
	*Fat32 mode in the multimode from NSCB-new new now follow the same renaming stile
	 as the exfat mode
	*Added more tag-removal options
	*Added ability to set up delta-removal, xci-supertrimmer or nsp-rebuilder on auto
	 mode.
v0.83- Unify beta and stable build.
	*Old modes were unified with the new modes. To access them press "L"(legacy) at
	startup
	*An option to enter directly in the legacy modes was added at the startup
	*For now if fat32 is selected the building is done with the legacy functions
	*Two new options have been added to the individual processing mode:
	 -Option 4: Delete deltas from update nsps.
	  This option creates a new update file when the update has deltas.
	 -Option 5: File renamer.
	  This option renames nsp or xci files in several formats accordingly with the 
	  options selected by the user.
v0.82- Added direct generation for multi-pack processing and more.
	*Added direct generation without nca extracting for multi pack processing (mode 2)
	*Added name calculation for multi pack processing (mode 2)
	*Added content calculation for for multi pack processing (This replaces update mode
	 in a better and more efective way) 
	*Temporarly removed option to fix logo in multi-xci files
	*Added option to generate multi-nsp including tickets without nca modification.
	 This files will pass blawar's tinfoil signature check.
         Notes:
	 > The mode only includes content from nca files
	 > If you include unlockers or converts the final file won't pass blawar's tinfoil
           verification. I'll add an option to prevent inclusion of modified ncas in this mode
	   in future updates.
	*Fixed japanese language detection in info functions and db functions for some games.
	 (Note: Still need to fix the 11 japanese games that give a decoding error when getting
	  the name)
	*Several minor bugfixes
	*Set update mode as LEGACY. Bound to be removed in future versions or to be repurposed
	 as a content override mode.
	*New naming follows the following scheme:
	 name [titleid] [game version] (number of games + number of updates + number of DLCs)
	*Noticed issues in the fat32 splitter with the new direct building modes so it's disabled
	in the beta.
	*Since the splitter was disabled a slighty modified version of 0.80-c was included as 
	stable if you need to do fat32 splitting use that version.
	NOTE: In future versions the fat32 splitter will get it's own mode along new trimming
	functions to avoid interference with the current direct building modes.
v0.81- BETA 2 direct generation for individual processing and more.
	*Added direct generation without nca extracting for individual processing (mode 1)
	*Added direct generation without nca extracting for multi-content splitter (mode3)
	Note: Both modes suppport all patches.
	*Fixed issues with special characters when building by parsing user inputs and lists
	trough python. This also solves issues with japanese characters while building.
	Note: this made the interface a little slower at some points.
	Note2: Base input in update mode and in the info functions is yet to be modified so 
	if you run into issues there please rename the file.	
	*Since it was longed asked the Update Mode (Mode 4) was modified. Now titlerights are
	removed from the base and the same patches (keygeneration, RSV ...) are applied
	to the base content.
	*Added database function (Mode6) It's a direct read from files and supports 3 formats
	nutdb, extended db and keyless extended. Last one is meant to be able to shared freely
	Database data can be importet as a CSV via Excel data function or similar functions to
	filter data.
	Notes.
		-Currently is only applied to nsp and nsx. XCI support will come in the future
		-It can recover keys from titlerights removed nca
		-Currently it doesn't work with nca from standard crypto origin (xci, custom)
		-It exports to the INFO folder.
		-DLCs are named by number since name data can't be extracted from them.
		-It'll support pulling DLC names from nut json files in the future
	*Added new info function that shows in a simple way the content ids from a multicontent
	file
	*Added option to verify keys.txt in the options configuration (Mode 0) 
v0.80- BETA VERSION with a lot of important changes 
	*Erased all external program dependencies. Current program is fully powered by
	squirrel.exe or squirrel.py. (Beta will be based on squirrel.exe
	*Added direct xci generation from nca files with new code. This increases the 
	generation speed and makes it equal to nsp generation.
	*Added progression bars	   
	*Added direct generation to fat32 formats for nsp and xci
		- FAT32 xci files (xc0,xc1,...)
		- FAT32 compatible with SX rommenu (ns0,ns1,..)
		- FAT32 compatble with all installers (00,01,..) in an archived folder. 
		  Folder is set as archived authomatically
	*Set zip generation to zip folder and deactivated it by default.
	*Added option to organize files on subfolders or individually in the output
	folder. By default it'll be individually.
	*Added option to configure buffer trough the bat. Increased default buffer to
	64kB wich works best for me. Test different buffers to find your best one ;)
	*Change to false exit in auto-mode and linked it to the batch option that was
	before only used in manual mode.
	*Reduced "cls" calls in auto-mode"
	*Added minimun keys template. NOTE: The xci_header_key is optional, if not 
	included the game-info will use default data already encrypted with a default
	IV.	
	   
v0.79- Corrected detection for keygeneration 2 wich fixes the issue with the Xenoblade
       Chronicles 2 DLCs
       Added xml generation when repacking as NSP giving support to xci-explorer.
       Fixed issue with NSCB clossing in info mode if you try to swap the file without
       turning back. File swapping is now enabled.
       Improved the functions in mode 5 "file-info mode":
         1.- Get CONTENT of the xci\nsp will show game data, types of files and size for
             all content inside the xci or nsp.
         2.- GAME-INFO and FW requirements eas expanded with more information for dlc,
             editor information, language information ...
         3.- Read the CNMT was expanded to include extended meta information.
       Improved the naming in the spitter mode.  
v0.78- Fixed error with RSV patching were DLC's got it's UpdateRequiredNumber patched
	Modified FW-requirements and CNMT-reader a little.
v0.77- Added new option to global config to skip the RSV and keygeneration patching
       prompt dialogue.
       Added fallback for names in info function number 3 in case there isn't american
       english name. If name is japanese it'll show weirdly for now
v0.76- Corrected hash calcultion after RSV patching in games that had a lot of updates.
       Added RequiredSystemVersion cap when lowering it up, set as FW4.0 by default when
       it's auto-calculated, since it's needed for some newer updates.
       Linked RSV cap to the keygeneration selection. Now if you choose keygeneration 7
       RSV won't go lower than 6.2 even if real keygeneration is lower, if you choose 5
	   it won't go lower than FW5.0, etc...
v0.75- Added configuration from the bat, option to change keygeneration, corrected RSV
       readouts and more.
       1.- Added options to change keygeneration to help run games at lower firmwares.
           Note it won't always work as the game can have other dependencies than the 
           firmware. 6.2 to 6.0 seems to work and 6.2 to 5.0 works if basegame is 5.0
       2.- Added "Mode 0" - Profile configuration from the bat.
       3.- Added auto-profile linking. A profile Bat will link with it's configuration
           file if they follow the following name scheme:
           a) Bat -> batname.bat
           b) Profile in zconfig -> batname_options.cmd
           Where "batname" is a name of your choosing. You can add as many bats in the
           same folder as you want with different profiles this way.
       4.- Corrected RequiredSystemVersion reads. It seems like our update XML read the 
           value wrong and RSV is 4bytes long instead of 8bytes long.
           Thanks to Liam for the tip. ^_^
       5.- Added better navigation from the bat and dissable auto-exit in manual-mode so 
           people can see the log. (Auto-Exit can be activated in the configuration)
       6.- Added "mode 5: file-info mode". Dragg a file and choose if you want to:
           a) See it's content
           b) See "nut-info" (as NUT from blawar shows it)
           c) See Firmware Requirements and to what is patchable without changing the
              keygeneration )nca files encryption)
           d) Get a read of the cnmt
           You only need to load the file one time to get all reads and the functions
           will let you print each read to a text file in "INFO" folder at bat's route.
v0.70- Better RequiredSystemVersion patching, added Split Mode, added Update Mode
       1.- RequiredSystemVersion patching is now set by default in auto-mode.
       2.- Program asks before patching RequiredSystemVersion in manual mode
       3.- RequiredSystemVersion IS NOW PATCHED TO THE KEYGENERATION. This means the system
	   will ask you to download the system update if it's needed because it lacks the master-key.
       4.- ADDED SPLIT MODE as option 3 in manual mode. Split Mode will let you split multi-content
           xci or nsp to it's original content.
           Split mode is set to repack DLC and Updates always as nsp.
       5.- ADDED UPDATE MODE as option 4 in manual mode. This is a first and easy implementation.
           You first set the base, which needs to be a multi-content file then make a list of things 
           to update\upgrade the content.
           Choose if you want to strip UPDATES\DLC or both from the base file, choose how you want
           to repack the resulting content and if you want to patch the meta and the program will 
           process the file.
       NOTE: IF A XCI DOESN'T WORK WITH RSV PATCHING TRY TO REDO IT WITHOUT PATCHING AND TELL ME
       IN GITHUB. SOME OLDER GAMES SEEM TO HAVE ISSUES WITH THE META PATCHING IN XCI FORM. I STILL
       NEED TO CHECK THE REASON.
v0.65- Added option to patched RequiredSystemVersion in the meta nca (set by default)
       Changed Read\Write permissions for input files to Read
       Renamed "nut_RTR.py" to "squirrel" since it's deviating a lot from Nut's main line.
v0.62- Added option to just make zips in "Manual Mode. Individual processing.
v0.61- Mostly bugfixes.
	   1.- Changed counter functions from "find /C" to other method for people with inverted 
	       bar routes.
	   2.- Changed nca header check for xci extraction so it doesn't give issues in rev games.
	   3.- Fixed naming issues in individual modes. Basically extension getting in final name.
	   4.- Repacked again the dependencies bat since I forgot in last build.
	   5.- Added optional example profiles for nsp and xci.
	       1.- NSP: 
	        	auto-repack-> NSP
	                extract with deltas
			pack files in folders individually for auto mode
			work folder -> NSCB_ntemp
	       2.- XCI: 
	        	auto-repack-> XCI
	                extract without deltas
			pack files in folders authomatically for auto mode
			work folder -> NSCB_xtemp
		Just take the content of the profile you want or both of them and put them in the
		program root folder. Several profiles can be together.

v0.60- Support for delta skipping and direct extraction
	   1.- Added nut options. Copy function with or without deltas
		   It'll let you skip the deltas wich are not needed for xci files.
		   For nsp files they serve to transform old updates into new ones
		   so they install faster and old update doesn't stay in your system
		   They're dissabled by default if you use nsp consider activating them.
	   2.- Added direct extraction from xci files instead of using hactool so now
		   extraction speed is linked to buffer.
	   3.- Added a couple of fallbacks to detect masterkeyrev in non standard ticket
		   formats and old ticket formats.
	   4.- Minor code clean up and little fixes.

v0.50- Changed name to NSC_Builder (Nintendo Switch Cleaner and Builder)
	   1.- Added updated hacbuild.
	   2.- Removed nstool and nspBuild
	   3.- Added modifications for nut libraries
	   4.- Added multi-content building options for xci and nsp.
	   5.- Removed old assistant bat files and replaced them with XCI.bat and NSP.bat
	   6.- Changed options in option file.
	   7.- Ability to link options files editing NSCB.bat header
	   
v0.41- Solved some issues with v0.4 and made new options in the filenaming solution.
       1.- Added "nstool.exe by jakcron" to ztools folder to be able to read data from
       meta and control nca files.
       2.- Solve issues originated by spaces in the program route.
       3.- NEW OPTIONS ADDED TO "zconfig\nsp_cleaner_options.cmd"
       a.) OPTION 9: Process files by temporarly renaming them to a safe name
           * false->don't rename files
           * true->rename temporarly to safename
           * agro->"Agresive Output" rename temporarly to tempname and output as name 
             set in nacp file.
           -- DEFAULT OPTION IS "true" --
       NOTE: DLCS DON'T HAVE NACP FILE SO AGRO WILL OUTPUT THEM AS [titleid]
       b.) OPTION 10: Output final file as game real name looking at control nca
           (If option 9 is set as "agro" it will allways output as the real name)
           * false->output as original name/or original name corrected with safe characters
           * true-> output as "real" name, stored in control nca.
           * oinfo->"Only info"-> Use either original filename or safename and add only 
             titleid, version, content tag ...
           -- DEFAULT OPTION IS "oinfo" --
       NOTE: DLCS DON'T HAVE NACP FILE SO "true" IN THIS CASE WILL BE REPLACED BY THE "oinfo" OPTION

v0.40- While I finish NX_Builder I solved couple of naming issues.
       1.- Now you don't need [titleid] in filename.
       2.- Solved issues with special characters like !,+,&,$... Added correction for
       a bunch of them if you need to add more edit ztools/safename.bat
       Example: If you want to replace @ for a input:
       set fileinput=%fileinput:@=a%
       Or to delete it:
       set fileinput=%fileinput:@=%
       You'll probably see the first version for NX_Builder either trough the weekend
       or at the beginning of next week.
       NOTE: This version is using a function of my modified NUT libraries for NX_Builder
       so don't change the config to use the whole NUT.
v0.30- Added new options in zconfig.
       > Option 4: Way the items are organized.
         * line: scattered in output folder
         * folder: in folders according to game name
       > Option 5 and option 6: Output folders for xci and nsp. As default using
         a common folder for both.
       > Option 7: Preserve stripped files from the nsp as a .zip file for future
         restore function. (True by default)
       > Option 8: Replace original file with clean/converted files.As default false.
         TAKE CARE WITH THIS ONE. BETTER CHECK ALL WORKS FINE BEFORE ACTIVATING IT.
       Added option to erase list.txt in manual mode.
v0.21- Fixed issue with manual mode not detecting the user repacking input correctly
       Added better check for dlcs and updates, according to id
       Added another config parameter to "nsp_cleaner_options.cmd" (xnsp_ifnotgame)
       > This parameter serves to repack dlcs and updates as nsp if processing list as xci only.
         Options are:
         * true: repack dlcs and updates as nsp
         * false: skip dlc and update repacking when exporting as xci.
v0.2 - Added xci repacking. You can now repack as:
       *xci
       *nsp
       *both formats
     - Added nsp_cleaner_options.cmd at zconfig. It'll let you configure the repack
       option for auto-mode as (xci,nsp,both)
     - If xci repacking filenames with [UPD] tag are skipped
     - If with xci repacking an error is logged it activates a fallback and an
       xci + [lc].nsp are build.
     - Now we support subfolders, thanks to MadScript77 for the advice on how to 
       set it as in the other great advices he gave about the code.
     - For manual mode you can allways choose what format to build from the current
       list.
     - More changes coming soon.
v0.1 - First official release